Dear Stéphane Ducasse, 

We are grateful for your patience while waiting for the notification. 

We are pleased to inform you that your paper has been accepted for presentation and publication at the International Workshop on Smalltalk Technologies organized within ESUG (European Smalltalk User Group) Conference.  

Paper ID:2 
Title: Pharo: a reflective language – A first systematic analysis of reflective APIs 
Authors: Iona Thomas, Stéphane Ducasse, Pablo Tesone, Guillermo Polito 

Please find enclosed the reviewers' comments, improve your paper according to the reviewers' suggestions and resubmit the paper to the EasyChair submission page by 16.7.2023. Furthermore, please include your answers to the reviewers and discuss the requested changes that you have incorporated and reasons in case you haven't done so. The PC will double-check that all reasonable reviewers' requests are met as a precondition for inclusion in the IWST 2023 Proceedings.

Furthermore, please keep in mind originality, style, structure, and formal English language which is compulsory for academic publications.

Sincerely, 
IWST 2023 team

SUBMISSION: 2
TITLE: Pharo: a reflective language – A first systematic analysis of reflective APIs


----------------------- REVIEW 1 ---------------------
SUBMISSION: 2
TITLE: Pharo: a reflective language – A first systematic analysis of reflective APIs
AUTHORS: Iona Thomas, Stéphane Ducasse, Pablo Tesone and Guillermo Polito

----------- Overall evaluation -----------
SCORE: 3 (strong accept)
----- TEXT:
I honestly fail to understand why this paper was submitted to IWST. The sheer scope and depth of the paper make it sound much more like an ACM TOSEM or IEEE TSE paper than a paper submitted at a workshop. It is very well written, well structured, and provides an astounding amount of details. Absurdly enough this puts it really at the fringe of IWST.
The one thing which would have been a great addition is the concoction of a running example of reflective programming, and illustrate it with various approaches/languages and the counterpart in Pharo.

I couldn't even find typos...



----------------------- REVIEW 2 ---------------------
SUBMISSION: 2
TITLE: Pharo: a reflective language – A first systematic analysis of reflective APIs
AUTHORS: Iona Thomas, Stéphane Ducasse, Pablo Tesone and Guillermo Polito

----------- Overall evaluation -----------
SCORE: 0 (borderline paper)
----- TEXT:
SUMMARY
This paper presents an overview of the reflective capabilities of pharo smalltalk. There presentation is done in the form of a catalog explaining the different functions, its uses and providing examples.


COMMENTS
In general, the paper can be very dry, as it presents a description of what is in the language, without fully referencing the parts in the description or giving examples of their use. Without this, then is very difficult to see what the insight of the paper is, which could be the aeras of improvements, but without any evidence of the operations and their problems, most of this areas of improvement are just wild statements.
Additionally, the presentation of the APIs is very inbalanced, in some APIs you describe all its features neatly in a list, other mention one or two and obscurely refere to the others in a way the reader has no idea what is happening.

In summary, the insight of the paper should be clearly stated, why does this paper need to exist?
The presentation needs to be uniform, clear, and use actual examples.

- What exactly is the purpose of Section 2?

- why is it an improvement to have a slower version of the Bulk pointer?

- The statement opening the discussion is not supported at all by the paper. What do you mean by if reflective operations are extremely powerful? Wher can we see that? what does extremely powerful mean?
How do reflective operations impede application safety?
This sentence appears to come from a completely different paper based on an analysis of reflective features, not a descriptive one as this.

- The paper is written carelessly and riddle with errors

MINOR COMMENTS
p1 developers to implement using -> developers to implement operations using
p1 default libraries operations that in other languages require -> default libraries; in other languages that requires
p1 usefully used -> normally used
p2 encapsulation, execute -> encapsulation, or execute
p2 of the reflective of reflective -> of the reflective
p3 in middle of 90 -> In the middle of the 90s
p3 reflection has been -> reflection was
p3 Garf[], Distirbuted Smalltalk [] or [] -> Garf [], or Distributed Smalltalk [][]
p3 location been relfected -> location being reflected
p3 AspectBoxes []. -> AspectBoxes [],
p3 pointcuts[]. -> pointcuts [], and 
p3 provides a good -> provide a good
p3 dynamically scoping crosscutting -> ?????
p5 we briefly describe since -> we briefly describe it, since
p5 it can also uses - it can also use
p5 Similarly which -> Similarly, 
p6 the first paragraph need to be rewriten
p6 In addition -> In addition,
p7 For each of the API we briefly describes -> For each API, we briefly describe
p7 and comennt it appropriate -> delete
p8 such tool relies -> such a tool would rely
p11 class creation.It -> class creation. It
p12 spaces missing in the list of class creation API
p12 Fluid class createion -> The fluid class creation
p12 It helps defining instance specific methods -> ????
p16 mentioned in leterature -> mentioned in the literature
p16 only loaded -> only be loaded



----------------------- REVIEW 3 ---------------------
SUBMISSION: 2
TITLE: Pharo: a reflective language – A first systematic analysis of reflective APIs
AUTHORS: Iona Thomas, Stéphane Ducasse, Pablo Tesone and Guillermo Polito

----------- Overall evaluation -----------
SCORE: 2 (accept)
----- TEXT:
This paper identifies the reflective APIs of Pharo, and provides some analysis of them.

This is obviously important to the Pharo development team, but if it were strictly an enumeration of the APIs it would be of limited interest to the broader Smalltalk community. However the analysis of the particular types of APIs and the discussion of the design issues of a MOP and how the Pharo APIs should evolve makes this relevant to IWST.

Improvements:
1) given the relative importance of the analysis, it would be nice to beef this up a bit. This also would be a good thing to emphasize in the talk.

2) is already a very long paper, but it's unclear how it could be trimmed and remain useful (but there are a few redundant sentences - see below)

3) this needs serious editing, preferably by a native English speaker. There are dozens of missing articles, mismatched singular and plural forms, duplicate words. There are also a few incomprehensible sentences. I will com back to this and add some examples if I have time.

